{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.4.451.19169",
      "templateHash": "450507780480262282"
    }
  },
  "parameters": {
    "subscriptionId": {
      "type": "string"
    },
    "name": {
      "type": "string"
    },
    "location": {
      "type": "string"
    },
    "hostingPlanName": {
      "type": "string"
    },
    "serverFarmResourceGroup": {
      "type": "string"
    },
    "alwaysOn": {
      "type": "bool"
    },
    "sku": {
      "type": "string"
    },
    "skuCode": {
      "type": "string"
    },
    "workerSize": {
      "type": "string"
    },
    "workerSizeId": {
      "type": "string"
    },
    "numberOfWorkers": {
      "type": "string"
    },
    "linuxFxVersion": {
      "type": "string"
    },
    "registryName": {
      "type": "string"
    },
    "registryResourceGroupName": {
      "type": "string"
    },
    "dockerRegistryUrl": {
      "type": "string"
    },
    "dockerRegistryUsername": {
      "type": "string"
    },
    "dockerRegistryPassword": {
      "type": "secureString"
    },
    "dockerRegistryStartupCommand": {
      "type": "string"
    }
  },
  "functions": [],
  "variables": {
    "registryResourceId": "[resourceId(parameters('subscriptionId'), parameters('registryResourceGroupName'), 'Microsoft.ContainerRegistry/registries', parameters('registryName'))]",
    "registryUrl": "[concat('https://', parameters('registryName'), '.azurecr.io')]",
    "registryUserName": "[listCredentials(variables('registryResourceId'), '2019-05-01').username]",
    "registryPassword": "[listCredentials(variables('registryResourceId'), '2019-05-01').passwords[0].value]"
  },
  "resources": [
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": {},
      "properties": {
        "siteConfig": {
          "appSettings": "[if(not(equals(parameters('registryName'), '')), createArray(
            createObject('name', 'DOCKER_REGISTRY_SERVER_URL', 'value', variables('registryUrl')), 
            createObject('name', 'DOCKER_REGISTRY_SERVER_USERNAME', 'value', variables('registryUsername')), 
            createObject('name', 'DOCKER_REGISTRY_SERVER_PASSWORD', 'value', variables('registryPassword')), 
            createObject('name', 'WEBSITES_ENABLE_APP_SERVICE_STORAGE', 'value', 'false')), 
          createArray())]",
          "linuxFxVersion": "[parameters('linuxFxVersion')]",
          "appCommandLine": "[parameters('dockerRegistryStartupCommand')]",
          "alwaysOn": "[parameters('alwaysOn')]"
        },
        "serverFarmId": "[format('/subscriptions/{0}/resourcegroups/{1}/providers/Microsoft.Web/serverfarms/{2}', parameters('subscriptionId'), parameters('serverFarmResourceGroup'), parameters('hostingPlanName'))]",
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[parameters('hostingPlanName')]",
      "location": "[parameters('location')]",
      "kind": "linux",
      "tags": {},
      "properties": {
        "name": "[parameters('hostingPlanName')]",
        "workerSize": "[parameters('workerSize')]",
        "workerSizeId": "[parameters('workerSizeId')]",
        "numberOfWorkers": "[parameters('numberOfWorkers')]",
        "reserved": true
      },
      "sku": {
        "tier": "[parameters('sku')]",
        "name": "[parameters('skuCode')]"
      }
    }
  ]
}