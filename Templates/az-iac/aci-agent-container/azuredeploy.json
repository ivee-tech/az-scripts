{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "containerGroupName": {
      "type": "string",
      "metadata": {
        "description": "Name for the container group"
      }
    },
    "containerName": {
      "type": "string",
      "metadata": {
        "description": "Name for the container"
      }
    },
    "imageName": {
      "type": "string",
      "metadata": {
        "description": "Name of the agent Docker image"
      }
    },
    "osType": {
      "type": "string",
      "metadata": {
        "description": "OS Type, either Linux or Windows."
      },
      "allowedValues": ["Linux", "Windows"]
    },
    "cpuCores": {
      "type": "string",
      "metadata": {
        "description": "The number of CPU cores to allocate to the container."
      },
      "defaultValue": "1.0"
    },
    "memoryInGB": {
      "type": "string",
      "metadata": {
        "description": "The amount of memory to allocate to the container in gigabytes."
      },
      "defaultValue": "1.5"
    },
    "AZP_URL": {
      "type": "string",
      "metadata": {
        "description": "The Azure DevOps organization URL."
      }
    },
    "AZP_TOKEN": {
      "type": "string",
      "metadata": {
        "description": "The Azure DevOps PAT for agent registration."
      }
    },
    "AZP_POOL": {
      "type": "string",
      "metadata": {
        "description": "The Azure DevOps pool to register the agent against."
      }
    },
    "AZP_AGENT_NAME": {
      "type": "string",
      "metadata": {
        "description": "The Azure DevOps agent name (hint: use the container group / container name as agent name)"
      }
    },
    "AZP_WORK": {
      "type": "string",
      "metadata": {
        "description": "The Azure DevOps agent work directory."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "The location in which the resources will be created."
      }
    }
  },
  "resources": [
    {
      "name": "[parameters('containerGroupName')]",
      "type": "Microsoft.ContainerInstance/containerGroups",
      "apiVersion": "2019-12-01",
      "location": "[parameters('location')]",
      "properties": {
        "containers": [
          {
            "name": "[parameters('containerName')]",
            "properties": {
              "image": "[parameters('imageName')]",
              "resources": {
                "requests": {
                  "cpu": "[parameters('cpuCores')]",
                  "memoryInGB": "[parameters('memoryInGB')]"
                }
              },
              "environmentVariables": [
                {
                  "name": "AZP_URL",
                  "value": "[parameters('AZP_URL')]"
                },
                {
                  "name": "AZP_TOKEN",
                  "secureValue": "[parameters('AZP_TOKEN')]"
                },
                {
                  "name": "AZP_POOL",
                  "value": "[parameters('AZP_POOL')]"
                },
                {
                  "name": "AZP_AGENT_NAME",
                  "value": "[parameters('AZP_AGENT_NAME')]"
                },
                {
                  "name": "AZP_WORK",
                  "value": "[parameters('AZP_WORK')]"
                }
              ]
            }
          }
        ],
        "osType": "[parameters('osType')]"
      }
    }
  ],
  "outputs": {
    "containerIPv4Address": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerInstance/containerGroups/', parameters('containerGroupName'))).ipAddress.ip]"
    }
  }
}